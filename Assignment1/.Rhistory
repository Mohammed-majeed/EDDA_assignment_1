p_right = p_hat + me
# Calculate the z-score
z = me / sqrt((p_hat*(1-p_hat))/length(data))
# Calculate the level of significance
alpha = (1 - pnorm(z))*2
# Calculate the confidence level
confidence_level = 1 - alpha
cat("Confidence Interval: [", p_left,
", ", p_right, "]",
"confidence_level: ",
confidence_level,
sep = "")
male_means = c()
female_means = c()
for (i in 1:1000) {
# Select 34 males and 28 females with birthweight < 2600 g
male_2600 = sample(data< 2600, 34)
female_2600 = sample(data[data < 2600], 28)
# Select 61 males and 65 females with birthweight >= 2600 g
male_others = sample(data[data >= 2600], 61)
female_others = sample(data[data >= 2600], 65)
# Combine the selected males and females with birthweight < 2600 g
males = c(male_2600, male_others)
females = c(female_2600, female_others)
# Calculate the mean birthweight for males and females
male_means = c(male_means, mean(males))
female_means = c(female_means, mean(females))
}
# Calculate the mean of the sample means for males and females
mean(male_means)
mean(female_means)
# Perform a two-sample t-test assuming unequal variances
t.test(male_means, female_means)
#library('tidyverse')
cholesterol <- read.table("cholesterol.txt", header = TRUE)
library(ggplot2)
summary(cholesterol)
# Regression the 2 variables are highly correlated
ggplot(cholesterol, aes(x = Before, y = After8weeks)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Before", y = "After 8 weeks", title = "Scatter plot of cholesterol levels")
cor(cholesterol$Before, cholesterol$After8weeks)
par(mfrow=c(1,3))
# creating histograms
ggplot(cholesterol, aes(x = Before)) +
geom_histogram(binwidth = 0.8) +
labs(x = "Before",
y = "Count",
title = "Histogram of cholesterol levels before diet")
shapiro.test(cholesterol$Before) # accept null, data is normal
ggplot(cholesterol, aes(x = After8weeks)) +
geom_histogram(binwidth = 0.8) +
labs(x = "After 8 weeks",
y = "Count",
title = "Histogram of cholesterol levels after 8 weeks on diet")
shapiro.test(cholesterol$After8weeks) # accept null, data is normal
# checking difference
diff <- cholesterol$Before - cholesterol$After8weeks
ggplot(cholesterol, aes(x = Before - After8weeks)) +
geom_histogram(binwidth = 0.2) +
labs(
x = "Difference in cholesterol levels",
y = "Count",
title = "Histogram of differences before and after diet")
shapiro.test(diff) # accept null, data is normal
wilcox.test(cholesterol$Before, cholesterol$After8weeks, paired = TRUE)
#strong evidence to suggest that the margarine diet #had an effect on cholesterol levels.
# Calculate estimate for theta
theta_hat <- 2*mean(cholesterol$After8weeks) - 3
sigma <- sqrt((theta_hat-3)^2/12)
n <- length(cholesterol$After8weeks)
z <- qnorm(0.975)
lower <- theta_hat - z*(sigma/sqrt(n))
upper <- theta_hat + z*(sigma/sqrt(n))
#confidence interval
c(lower, upper)
after = cholesterol$After8weeks
# Define the test statistic function
T <- function(x) max(x)
# Set up the range of theta values to test
theta_vals <- seq(3, 12, by = 0.1)
# Create a vector to store the p-values for each theta value
p_vals <- rep(NA, length(theta_vals))
# Perform the bootstrap test for each theta value
for (i in seq_along(theta_vals)) {
# Generate bootstrap samples
boot_samples <- replicate(10000, runif(18, min = 3, max = theta_vals[i]))
# Calculate test statistics for bootstrap samples
boot_t <- apply(boot_samples, 2, T)
# Calculate p-value
p_vals[i] <- mean(boot_t >= max(after))
}
# Plot the p-values as a function of theta
plot(theta_vals, p_vals, type = "l", xlab = "theta", ylab = "p-value")
abline(h = 0.01, col = "yellow", lty = 2)
abline(h = 0.05, col = "red", lty = 2)
abline(h = 0.1, col = "blue", lty = 2)
# Median test
binom.test(sum(cholesterol$After8weeks<6),length(cholesterol$After8weeks),p=0.5,alt="less")
binom.test(sum(cholesterol$After8weeks < 4.5), length(cholesterol$After8weeks), p = 0.25, alternative = "less", conf.level = 0.95)
data = read.table(file = "diet.txt", header = TRUE)
data$weight.lost=data$preweight-data$weight6weeks
before=data$preweight;after=data$weight6weeks
par(mfrow=c(1,2))
qqnorm(before)
hist(before)
qqnorm(after)
hist(after)
qqnorm(after-before)
hist(after-before)
t.test(before,after,paired=TRUE)
data$diet=factor(data$diet)
dataaov=lm(weight.lost~diet,data=data)
anova(dataaov)
par(mfrow=c(1,2)); qqnorm(residuals(dataaov))
plot(fitted(dataaov),residuals(dataaov))
summary(dataaov)
genderaov=lm(weight.lost~gender*diet,data=data)
anova(genderaov)
preddata=data.frame(diet=c("1","2","3"))
predict(dataaov,preddata)
#install.packages('MASS')
library(MASS)
data(npk)
#Create a matrix of random plots
random_plots_matrix <- cbind(rep(1:24),rep(1:6, each = 4),
replicate(3, c(replicate(6, sample(c(1,1,0,0))))))
#Convert the matrix to a data frame
data_frame <- data.frame(random_plots_matrix)
#Set column names
header <- c("plot", "block", "N", "P", "K")
colnames(data_frame) <- header
#View the resulting data frame
head(data_frame)
par(mfrow=c(1,2))
# Subset the data to only include nitrogen treatment
npk_nitrogen  <- npk[npk$N == 1,]
# Calculate the average yield per block for nitrogen treatment
nitrogen_avg_yield  <- aggregate(yield ~ block, data = npk_nitrogen, FUN = mean)
# Subset the data to only include plots without nitrogen treatment
npk_no_nitrogen  <- npk[npk$N == 0,]
# Calculate the average yield per block for plots without nitrogen
#treatment
no_nitrogen_avg_yield  <- aggregate(yield ~ block, data = npk_no_nitrogen, FUN = mean)
# Make a boxplot comparing the average yield per block for nitrogen and no nitrogen
#treatments
boxplot(no_nitrogen_avg_yield$yield, nitrogen_avg_yield$yield,
names = c("No Nitrogen Treatment", "Nitrogen Treatment"), ylab = "yield")
#legend("topleft", legend = c("Nitrogen Treatment", "No Nitrogen Treatment"))
avg_yield <- apply(cbind(nitrogen_avg_yield[[2]], no_nitrogen_avg_yield[[2]]),
1,
function(x) unname(unlist(x)))
rownames(avg_yield)<- c("nitrogen_avg_yield","no_nitrogen_avg_yield")
barplot(avg_yield, col = c("#1b98e0", "#353436"),beside = TRUE,
xlab="blocks",ylab = "yield", ylim=c(0,90),
names.arg=c("1", "2", "3", "4", "5", "6"))
legend("topleft", legend = c("Nitrogen Treatment", "No Nitrogen Treatment"),
fill =c("#1b98e0", "#353436"))
par(mfrow=c(1,2))
# Check for normality with histogram
hist(x = npk$yield , breaks=7 ,main = "Histogram of yield",
xlab = " yield ",freq = FALSE)
lines(x= density(x= npk$yield), col=" red ")
qqnorm(npk$yield)
qqline(npk$yield)
# Check for normality with boxplot
plot(yield ~ block + factor(N), data = npk)
# Shapiro-Wilk test
shapiro.test(npk$yield)
twoANOVA <- aov(yield ~ block * factor(N), data = npk)
summary(twoANOVA)
model1 = lm(yield ~ N:block + P + K,data=npk)
model2 = lm(yield ~ P:block + N + K,data=npk)
model3 = lm(yield ~ K:block + P + N,data=npk)
print('model 1: ')
anova(model1)
print('model 2: ')
anova(model2)
print('model 3: ')
anova(model3)
model_add = lm(yield ~ N+P+K+block, data=npk)
print('model all sum: ')
anova(model_add)
library(lme4)
npklmer= lmer(yield~N+(1|block), REML=FALSE, data=npk)
npklmer2=lmer(yield~(1|block), REML=FALSE, data=npk)
npkmaov=anova(npklmer2, npklmer)
npkmaov
#library('tidyverse')
cholesterol <- read.table("cholesterol.txt", header = TRUE)
library(ggplot2)
summary(cholesterol)
shapiro.test(cholesterol$Before) # accept null, data is normal
# Regression the 2 variables are highly correlated
ggplot(cholesterol, aes(x = Before, y = After8weeks)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Before", y = "After 8 weeks", title = "Scatter plot of cholesterol levels")
cor(cholesterol$Before, cholesterol$After8weeks)
par(mfrow=c(1,3))
# creating histograms
ggplot(cholesterol, aes(x = Before)) +
geom_histogram(binwidth = 0.8) +
labs(x = "Before",
y = "Count",
title = "Histogram of cholesterol levels before diet")
ggplot(cholesterol, aes(x = After8weeks)) +
geom_histogram(binwidth = 0.8) +
labs(x = "After 8 weeks",
y = "Count",
title = "Histogram of cholesterol levels after 8 weeks on diet")
shapiro.test(cholesterol$After8weeks) # accept null, data is normal
# checking difference
diff <- cholesterol$Before - cholesterol$After8weeks
ggplot(cholesterol, aes(x = Before - After8weeks)) +
geom_histogram(binwidth = 0.2) +
labs(
x = "Difference in cholesterol levels",
y = "Count",
title = "Histogram of differences before and after diet")
shapiro.test(diff) # accept null, data is normal
#library('tidyverse')
cholesterol <- read.table("cholesterol.txt", header = TRUE)
library(ggplot2)
summary(cholesterol)
shapiro.test(cholesterol$Before) # accept null, data is normal
shapiro.test(cholesterol$After8weeks) # accept null, data is normal
# checking difference
diff <- cholesterol$Before - cholesterol$After8weeks
shapiro.test(diff) # accept null, data is normal
# Regression the 2 variables are highly correlated
ggplot(cholesterol, aes(x = Before, y = After8weeks)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Before", y = "After 8 weeks", title = "Scatter plot of cholesterol levels")
cor(cholesterol$Before, cholesterol$After8weeks)
par(mfrow=c(1,3))
# creating histograms
ggplot(cholesterol, aes(x = Before)) +
geom_histogram(binwidth = 0.8) +
labs(x = "Before",
y = "Count",
title = "Histogram of cholesterol levels before diet")
ggplot(cholesterol, aes(x = After8weeks)) +
geom_histogram(binwidth = 0.8) +
labs(x = "After 8 weeks",
y = "Count",
title = "Histogram of cholesterol levels after 8 weeks on diet")
ggplot(cholesterol, aes(x = Before - After8weeks)) +
geom_histogram(binwidth = 0.2) +
labs(
x = "Difference in cholesterol levels",
y = "Count",
title = "Histogram of differences before and after diet")
#library('tidyverse')
cholesterol <- read.table("cholesterol.txt", header = TRUE)
library(ggplot2)
summary(cholesterol)
shapiro.test(cholesterol$Before) # accept null, data is normal
shapiro.test(cholesterol$After8weeks) # accept null, data is normal
# checking difference
diff <- cholesterol$Before - cholesterol$After8weeks
shapiro.test(diff) # accept null, data is normal
# Regression the 2 variables are highly correlated
regplot <- ggplot(cholesterol, aes(x = Before, y = After8weeks)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Before", y = "After 8 weeks", title = "Scatter plot of cholesterol levels")
cor(cholesterol$Before, cholesterol$After8weeks)
par(mfrow=c(1,3))
# creating histograms
hist1 <- ggplot(cholesterol, aes(x = Before)) +
geom_histogram(binwidth = 0.8) +
labs(x = "Before",
y = "Count",
title = "Histogram of cholesterol levels before diet")
hist2 <- ggplot(cholesterol, aes(x = After8weeks)) +
geom_histogram(binwidth = 0.8) +
labs(x = "After 8 weeks",
y = "Count",
title = "Histogram of cholesterol levels after 8 weeks on diet")
hist3 <- ggplot(cholesterol, aes(x = Before - After8weeks)) +
geom_histogram(binwidth = 0.2) +
labs(
x = "Difference in cholesterol levels",
y = "Count",
title = "Histogram of differences before and after diet")
par(mfrow=c(1,4))
regplot
hist1
hist2
hist3
require(gridExtra)
#par(mfrow=c(1,4))
grid.arrange(regplot, hist1, hist2, hist3, ncol=2)
install.packages("gridExtra")
#install.packages("gridExtra")
require(gridExtra)
#par(mfrow=c(1,4))
grid.arrange(regplot, hist1, hist2, hist3, ncol=2)
birthweight = read.table(file = "birthweight.txt", header = TRUE)
data= birthweight$birthweight
par(mfrow=c(1,3))
qqnorm(data, main = "Normal Q-Q Plot of Birthweight")
qqline(data,col=" red ")
# Check for normality with histogram
hist(x = data,breaks=15,main = "Histogram of Birthweights",
xlab = " Birthweight ",freq = FALSE)
lines(x= density(x= data), col=" red ")
# Check for normality with boxplot
boxplot (data , main =" Boxplot of Birthweight ",
xlab =" Birthweight ")#horizontal = TRUE)
shapiro.test(data)
# construct Confidence Interval
mu <- mean(data)
stnd <-sd(data)
CI <- 0.96
alpha <- 1-CI # Calculate the margin of error for a 95% confidence interval
z <- qnorm(1 - alpha/2) # 98th percentile of standard normal distribution
me <- z * stnd / sqrt(length(data)) # Calculate the margin of error
lower_ci = mu - me # Calculate the confidence interval
upper_ci = mu + me
cat("Confidence Interval: [", lower_ci, ", ", upper_ci, "]", sep = "")
# construct a bounded 96%-CI for mu(mean)
for (sample_size in 1:1000) {
lower_bound = mu - z*stnd/sqrt(sample_size); upper_bound = mu + z*stnd/sqrt(sample_size)
CI_length <- upper_bound - lower_bound
if (CI_length <= 100) {
break
}
}
cat("sample_size",sample_size)
# Compute a bootstrap 96%-CI for mu and compare it to the above CI.
library(boot)
B <- 1000 # Choose number of bootstrap resamples
boot_data <- boot(data, statistic = function(data, i) mean(data[i]), R = B)
boot_ci <- boot.ci(boot_data, type = "perc", conf = 0.96)
lower_bound_boot_ci <- boot_ci$percent[[4]]
upper_bound_boot_ci <- boot_ci$percent[[5]]
cat("boot_CI Confidence Interval: [",
lower_bound_boot_ci, ", ",
upper_bound_boot_ci, "]", sep = "")
# Verify this claim by using a one side t-test
t.test(data, mu = 2800, alternative = "greater")
# sign test
binom.test(sum(data > 2800), n=length(data), p = 0.5, alternative = "greater")
#library('tidyverse')
cholesterol <- read.table("cholesterol.txt", header = TRUE)
library(ggplot2)
summary(cholesterol)
shapiro.test(cholesterol$Before) # accept null, data is normal
shapiro.test(cholesterol$After8weeks) # accept null, data is normal
# checking difference
diff <- cholesterol$Before - cholesterol$After8weeks
shapiro.test(diff) # accept null, data is normal
cor(cholesterol$Before, cholesterol$After8weeks)
# Regression the 2 variables are highly correlated
regplot <- ggplot(cholesterol, aes(x = Before, y = After8weeks)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Before", y = "After 8 weeks", title = "Scatter plot of cholesterol levels")
# creating histograms
hist1 <- ggplot(cholesterol, aes(x = Before)) +
geom_histogram(binwidth = 0.8) +
labs(x = "Before",
y = "Count",
title = "Histogram of cholesterol levels before diet")
hist2 <- ggplot(cholesterol, aes(x = After8weeks)) +
geom_histogram(binwidth = 0.8) +
labs(x = "After 8 weeks",
y = "Count",
title = "Histogram of cholesterol levels after 8 weeks on diet")
hist3 <- ggplot(cholesterol, aes(x = Before - After8weeks)) +
geom_histogram(binwidth = 0.2) +
labs(
x = "Difference in cholesterol levels",
y = "Count",
title = "Histogram of differences before and after diet")
#install.packages("gridExtra")
require(gridExtra)
#par(mfrow=c(1,4))
grid.arrange(regplot, hist1, hist2, hist3, ncol=2)
wilcox.test(cholesterol$Before, cholesterol$After8weeks, paired = TRUE)
#strong evidence to suggest that the margarine diet #had an effect on cholesterol levels.
theta_hat <- 2*mean(cholesterol$After8weeks) - 3 # Calculate estimate for theta
sigma <- sqrt((theta_hat-3)^2/12)
n <- length(cholesterol$After8weeks)
z <- qnorm(0.975)
lower <- theta_hat - z*(sigma/sqrt(n))
upper <- theta_hat + z*(sigma/sqrt(n))
c(lower, upper) #confidence interval
after = cholesterol$After8weeks
T <- function(x) max(x) # Define the test statistic function
theta_vals <- seq(3, 12, by = 0.1) # Set up the range of theta values to test
# Create a vector to store the p-values for each theta value
p_vals <- rep(NA, length(theta_vals))
# Perform the bootstrap test for each theta value
for (i in seq_along(theta_vals)) {
# Generate bootstrap samples
boot_samples <- replicate(10000, runif(18, min = 3, max = theta_vals[i]))
# Calculate test statistics for bootstrap samples
boot_t <- apply(boot_samples, 2, T)
# Calculate p-value
p_vals[i] <- mean(boot_t >= max(after))
}
# Plot the p-values as a function of theta
plot(theta_vals, p_vals, type = "l", xlab = "theta", ylab = "p-value")
abline(h = 0.01, col = "yellow", lty = 2)
abline(h = 0.05, col = "red", lty = 2)
abline(h = 0.1, col = "blue", lty = 2)
# Median test
binom.test(sum(cholesterol$After8weeks<6),length(cholesterol$After8weeks),p=0.5,alt="less")
binom.test(sum(cholesterol$After8weeks < 4.5), length(cholesterol$After8weeks), p = 0.25, alternative = "less", conf.level = 0.95)
data = read.table(file = "diet.txt", header = TRUE)
data$weight.lost=data$preweight-data$weight6weeks
before=data$preweight;after=data$weight6weeks
par(mfrow=c(1,2))
qqnorm(before)
hist(before)
qqnorm(after)
hist(after)
qqnorm(after-before)
hist(after-before)
t.test(before,after,paired=TRUE)
data$diet=factor(data$diet)
dataaov=lm(weight.lost~diet,data=data)
anova(dataaov)
par(mfrow=c(1,2)); qqnorm(residuals(dataaov))
plot(fitted(dataaov),residuals(dataaov))
summary(dataaov)
genderaov=lm(weight.lost~gender*diet,data=data)
anova(genderaov)
preddata=data.frame(diet=c("1","2","3"))
predict(dataaov,preddata)
#install.packages('MASS')
library(MASS)
data(npk)
#Create a matrix of random plots
random_plots_matrix <- cbind(rep(1:24),rep(1:6, each = 4),
replicate(3, c(replicate(6, sample(c(1,1,0,0))))))
#Convert the matrix to a data frame
data_frame <- data.frame(random_plots_matrix)
#Set column names
header <- c("plot", "block", "N", "P", "K")
colnames(data_frame) <- header
#View the resulting data frame
head(data_frame)
par(mfrow=c(1,2))
# Subset the data to only include nitrogen treatment
npk_nitrogen  <- npk[npk$N == 1,]
# Calculate the average yield per block for nitrogen treatment
nitrogen_avg_yield  <- aggregate(yield ~ block, data = npk_nitrogen, FUN = mean)
# Subset the data to only include plots without nitrogen treatment
npk_no_nitrogen  <- npk[npk$N == 0,]
# Calculate the average yield per block for plots without nitrogen
#treatment
no_nitrogen_avg_yield  <- aggregate(yield ~ block, data = npk_no_nitrogen, FUN = mean)
# Make a boxplot comparing the average yield per block for nitrogen and no nitrogen
#treatments
boxplot(no_nitrogen_avg_yield$yield, nitrogen_avg_yield$yield,
names = c("No Nitrogen Treatment", "Nitrogen Treatment"), ylab = "yield")
#legend("topleft", legend = c("Nitrogen Treatment", "No Nitrogen Treatment"))
avg_yield <- apply(cbind(nitrogen_avg_yield[[2]], no_nitrogen_avg_yield[[2]]),
1,
function(x) unname(unlist(x)))
rownames(avg_yield)<- c("nitrogen_avg_yield","no_nitrogen_avg_yield")
barplot(avg_yield, col = c("#1b98e0", "#353436"),beside = TRUE,
xlab="blocks",ylab = "yield", ylim=c(0,90),
names.arg=c("1", "2", "3", "4", "5", "6"))
legend("topleft", legend = c("Nitrogen Treatment", "No Nitrogen Treatment"),
fill =c("#1b98e0", "#353436"))
par(mfrow=c(1,2))
# Check for normality with histogram
hist(x = npk$yield , breaks=7 ,main = "Histogram of yield",
xlab = " yield ",freq = FALSE)
lines(x= density(x= npk$yield), col=" red ")
qqnorm(npk$yield)
qqline(npk$yield)
# Check for normality with boxplot
plot(yield ~ block + factor(N), data = npk)
# Shapiro-Wilk test
shapiro.test(npk$yield)
twoANOVA <- aov(yield ~ block * factor(N), data = npk)
summary(twoANOVA)
model1 = lm(yield ~ N:block + P + K,data=npk)
model2 = lm(yield ~ P:block + N + K,data=npk)
model3 = lm(yield ~ K:block + P + N,data=npk)
print('model 1: ')
anova(model1)
print('model 2: ')
anova(model2)
print('model 3: ')
anova(model3)
model_add = lm(yield ~ N+P+K+block, data=npk)
print('model all sum: ')
anova(model_add)
library(lme4)
npklmer= lmer(yield~N+(1|block), REML=FALSE, data=npk)
npklmer2=lmer(yield~(1|block), REML=FALSE, data=npk)
npkmaov=anova(npklmer2, npklmer)
npkmaov
theta_hat <- 2*mean(cholesterol$After8weeks) - 3 # Calculate estimate for theta
theta_hat
sigma <- sqrt((theta_hat-3)^2/12)
n <- length(cholesterol$After8weeks)
z <- qnorm(0.975)
lower <- theta_hat - z*(sigma/sqrt(n))
upper <- theta_hat + z*(sigma/sqrt(n))
c(lower, upper) #confidence interval
wilcox.test(cholesterol$Before, cholesterol$After8weeks, paired = TRUE)
#strong evidence to suggest that the margarine diet #had an effect on cholesterol levels.
